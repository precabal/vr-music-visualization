// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
namespace AssemblyCSharp
{
	public class BurstEvent : IEvent
	{
		private float _eventTime;
		private float _attackTime, _decayTime, _sustainTime, _releaseTime;
		private System.Random random = new System.Random ();

		public float EventTime
		{
			get { return _eventTime; }
			set { _eventTime = value; }
		}
		
		public BurstEvent (float eventTime)
		{
			_eventTime = eventTime;

		}
		
		public void Perform(List<GameObject> objects)
		{
			//light 80% 0
			//light 100% at _attack
			//light 20% _attack+_decay
			//light 0% _attack + _decay + _sustain + _release

			//for a percentage according to probability
			foreach (GameObject obj in objects)
			{
				int randito = random.Next(0,100);
				if (randito < 5)
				{
					//light right away, 
					obj.GetComponent("Halo") as Behaviour).enabled = true;
					//and turn off after attack + decay + sustain + release time
				}
				else
				{
					if (randito < 8)
					{
						//light right away
						obj.GetComponent("Halo") as Behaviour).enabled = true;
					}
					else
					{
						//light after attack time,
					}
					// and turn off afther attack time
				}


				


			}
		}
	}
}

